/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Toggle1 {
            bindings = <&tog 1>;
            key-positions = <36 37>;
        };

        Toggle2 {
            bindings = <&tog 2>;
            key-positions = <41 40>;
        };

        EnterRight {
            bindings = <&kp ENTER>;
            key-positions = <19 39>;
        };

        EnterLeft {
            bindings = <&kp ENTER>;
            key-positions = <16 38>;
        };

        CopyR {
            bindings = <&kp RG(C)>;
            key-positions = <19 20>;
        };

        PasteR {
            bindings = <&kp RG(V)>;
            key-positions = <21 20>;
        };

        CopyL {
            bindings = <&kp LG(C)>;
            key-positions = <15 16>;
        };

        PasteL {
            bindings = <&kp LG(V)>;
            key-positions = <14 15>;
        };

        EnterDouble {
            bindings = <&kp ENTER>;
            key-positions = <16 19>;
        };

        ToggleGaming {
            bindings = <&tog 3>;
            key-positions = <40 41 39>;
        };
    };

    behaviors {
        HRM_R: HRM_R {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <500>;
            hold-trigger-key-positions = <13 14 15 16 0 1 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 2 3 4 5 39 40 41>;
            hold-trigger-on-release;
        };

        HRM_L: HRM_L {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <500>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 8 36 37 38>;
        };

        MultiShift: MultiShift {
            compatible = "zmk,behavior-mod-morph";
            label = "MULTISHIFT";
            bindings = <&StickyShiftRelease LEFT_SHIFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        StickyShiftRelease: StickyShiftRelease {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKYSHIFTRELEASE";
            bindings = <&sk>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <2000>;
        };

        ThumbLayer: ThumbLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMBLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <500>;
            hold-trigger-on-release;
        };

        OyayubiShift: OyayubiShift {
            compatible = "zmk,behavior-hold-tap";
            label = "OYAYUBISHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <500>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp Q           &kp W              &kp F              &kp P                &kp B                  &kp J                    &kp L                 &kp U               &kp Y               &kp SEMICOLON   &kp C_PLAY_PAUSE
&kp TAB     &HRM_L LCTRL A  &HRM_L LEFT_ALT R  &HRM_L LEFT_GUI S  &HRM_L LEFT_SHIFT T  &kp G                  &kp M                    &HRM_R RIGHT_SHIFT N  &HRM_R RIGHT_GUI E  &HRM_R RIGHT_ALT I  &HRM_R RCTRL O  &kp SQT
&mo 2       &kp Z           &kp X              &kp C              &kp D                &kp V                  &kp K                    &kp H                 &kp COMMA           &kp DOT             &kp FSLH        &mo 1
                                               &kp LG(Z)          &kp ENTER            &ThumbLayer 1 SPACE    &ThumbLayer 2 BACKSPACE  &MultiShift           &kp RG(RS(Z))
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Numbers";
            bindings = <
&kp ESCAPE  &kp N1        &kp N2        &kp N3        &kp N4         &kp N5             &kp N6         &kp N7             &kp N8    &kp N9           &kp N0         &kp C_PLAY_PAUSE
&kp TAB     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4       &kp PAGE_UP    &kp C_VOLUME_DOWN  &kp UP    &kp C_VOLUME_UP  &kp LESS_THAN  &kp GREATER_THAN
&trans      &bt BT_CLR    &trans        &kp LC(HOME)  &kp LC(LS(S))  &kp PRINTSCREEN    &kp PAGE_DOWN  &kp LEFT           &kp DOWN  &kp RIGHT        &kp C_MUTE     &trans
                                        &trans        &kp ENTER      &kp SPACE          &kp BACKSPACE  &MultiShift        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbols";
            bindings = <
&kp TAB    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT            &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp QUESTION  &trans  &trans    &trans    &kp DOUBLE_QUOTES    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans        &trans  &trans    &trans    &trans               &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                 &kp LGUI  &trans    &kp SPACE            &kp RET    &trans     &kp RALT
            >;
        };

        Gaming {
            display-name = "Gaming";
            bindings = <
&kp TAB     &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT            &kp PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp RPAR      &kp BSPC
&kp LCTRL   &kp QUESTION  &trans  &kp W     &trans    &kp DOUBLE_QUOTES    &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &kp GRAVE
&kp LSHIFT  &kp LSHIFT    &kp A   &kp S     &kp D     &trans               &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE      &kp TILDE
                                  &kp LGUI  &trans    &kp SPACE            &kp RET    &trans        &kp RALT
            >;
        };

        extra_2 { status = "reserved"; };
    };
};
